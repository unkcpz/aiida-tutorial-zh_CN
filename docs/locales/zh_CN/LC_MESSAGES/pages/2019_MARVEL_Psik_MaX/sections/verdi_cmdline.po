# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA Tutorials package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 06:22+0000\n"
"PO-Revision-Date: 2019-07-15 05:18+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/scut-ccmp/teams/98995/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:2
msgid "Verdi command line"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:4
msgid ""
"This part of the tutorial will familiarize you with the ``verdi`` command-"
"line interface (CLI), which lets you manage your AiiDA installation, inspect"
" the contents of your database,  control running calculations and more."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:7
msgid ""
"The ``verdi`` command supports **tab-completion**: In the terminal, type "
"``verdi``, followed by a space and press the 'Tab' key twice to show a list "
"of all the available sub commands."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:9
msgid ""
"For help on ``verdi`` or any of its subcommands, simply append the "
"``--help/-h`` flag, e.g.:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:15
msgid ""
"More details on ``verdi`` can be found in the `online documentation <https"
"://aiida-core.readthedocs.io/en/latest/verdi/verdi_user_guide.html>`_."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:21
msgid "Setting up a profile"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:23
msgid ""
"After installing AiiDA, the first step is to create a \"profile\". "
"Typically, you would be using one profile per independent research project."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:26
msgid ""
"The easiest way of setting up a new profile is through ``verdi quicksetup``."
" Let's set up a new profile that we will use throughout this tutorial:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:33
msgid ""
"This will prompt you for some information, such as the name of the profile, "
"your name, etc. The information about you as a user will be associated with "
"all the data that you create in AiiDA and is important for attribution, when"
" you start sharing your data with others. After you have answered all the "
"questions, a new profile will be created, along with the required database "
"and repository."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:41
msgid ""
"``verdi quicksetup`` is a user-friendly wrapper around the ``verdi setup`` "
"command that provides more control over the profile setup. As explained in "
"`the documentation <https://aiida-"
"core.readthedocs.io/en/latest/install/installation.html#database-setup>`_, "
"``verdi setup`` expects certain external resources, such as the database to "
"already have been pre-configured. ``verdi quicksetup`` will try to do this "
"for you, but may not be successful in certain environments."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:45
msgid ""
"To see this profile, and any others that may have been configured, run:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:55
msgid ""
"Each line, ``generic`` and ``quicksetup`` in this example, corresponds to a "
"profile. The one marked with an asterisk is the \"default\" profile, meaning"
" that any ``verdi`` command that you execute will be applied to that "
"profile."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:60
msgid ""
"The output you get may differ. The ``generic`` profile is pre-configured on "
"the virtual machine built for the tutorial (but we are not going to use it "
"here)."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:63
msgid ""
"Let's change the default profile to the newly created ``quicksetup`` for the"
" rest of the tutorial:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:69
msgid ""
"From now on, all ``verdi`` commands will apply to the ``quicksetup`` "
"profile."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:73
msgid ""
"To quickly perform a single command on a profile that is not the default, "
"use the ``-p/--profile`` option: For example, ``verdi -p generic profile "
"show`` will display the configuration of the ``generic`` profile, despite it"
" not being the current default profile."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:78
msgid "Importing data"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:80
msgid ""
"Before we start running calculations ourselves, we are going to look at an "
"AiiDA database already created by someone else. Let's import one from the "
"web:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:87
msgid ""
"Contrary to most databases, AiiDA databases contain not only *results* of "
"calculations but also their inputs and information on how a particular "
"result was obtained. This information, the *data provenance*, is stored in "
"the form of a *directed acyclic graph* (DAG). In the following, we are going"
" to introduce you to different ways of browsing this graph and will ask you "
"to find out some information regarding the database you just imported."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:94
msgid "Your first AiiDA graph"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:96
msgid ""
":numref:`fig_graph_input_only` shows a typcial example of a calculation "
"represented in an AiiDA graph. Have a look to the figure and its caption "
"before moving on."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:103
msgid ""
"Graph with all inputs (data, circles; and code, diamond) to the Quantum "
"ESPRESSO calculation (square) that you will create in the "
":ref:`calculations` section of this tutorial."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:109
msgid ""
"Same as :numref:`fig_graph_input_only`, but also with the outputs that the "
"engine will create and connect automatically. The ``RemoteData`` node is "
"created during submission and can be thought as a symbolic link to the "
"remote folder in which the calculation runs on the cluster. The other nodes "
"are created when the calculation has finished, after retrieval and parsing. "
"The node with linkname 'retrieved' contains the raw output files stored in "
"the AiiDA repository; all other nodes are added by the parser. Additional "
"nodes (symbolized in gray) can be added by the parser (e.g. an output "
"``StructureData`` if you performed a relaxation calculation, a "
"``TrajectoryData`` for molecular dynamics etc.)."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:115
msgid ""
":numref:`fig_graph_input_only` was drawn by hand but you can generate a "
"similar graph automatically by passing the **identifier** of a calculation "
"node to ``verdi graph generate <IDENTIFIER>``. Identifiers in AiiDA come in "
"three forms:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:118
msgid ""
"\"Primary Key\" (PK): An integer, e.g. ``723``, that identifies your entity "
"within your database (automatically assigned)"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:119
msgid ""
"`Universally Unique Identifier "
"<https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)>`_"
" (UUID): A string, e.g. ``ce81c420-7751-48f6-af8e-eb7c6a30cec3`` that "
"identifies your entity globally (automatically assigned)"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:120
msgid ""
"Label: A human-readable string, e.g. ``test_qe_calculation`` (manually "
"assigned)"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:122
msgid ""
"Any ``verdi`` command that expects an identifier will accept a PK, a UUID or"
" a label (although not all entities have a label by default). While PKs are "
"often shorter than UUIDs and can be easier to remember, they are only unique"
" within your database. **Whenever you intend to share your data with others,"
" use UUIDs to refer to nodes.**"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:127
msgid ""
"For UUIDs, it is sufficient to specify a subset (starting at the beginning) "
"as long as it can already be uniquely resolved. For more information on "
"identifiers in ``verdi`` and AiiDA in general, see the `documentation <https"
"://aiida-core.readthedocs.io/en/latest/verdi/verdi_user_guide.html#cli-"
"identifiers>`_."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:130
msgid ""
"For the remainder of this section, fields enclosed in angular brackets, such"
" as ``<IDENTIFIER>``, are placeholders that you should replace before "
"executing the command. With that in mind, let's generate a graph for the "
"calculation node with UUID ``ce81c420-7751-48f6-af8e-eb7c6a30cec3``:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:137
msgid ""
"This command will create the file ``<PK>.dot`` that can be rendered by means"
" of the utility ``dot`` as follows:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:143
msgid "which will create a pdf file ``<PK>.pdf``."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:146
msgid ""
"You can open this file on the Amazon machine by using ``evince`` or, if the "
"ssh connection is too slow, copy it via ``scp`` to your local machine. To do"
" so, if you are using Linux/Mac OS X, you can type in your *local* machine:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:153
msgid ""
"and then open the file. Alternatively, you can use graphical software to "
"achieve the same, for instance: WinSCP on Windows, Cyberduck on the Mac, or "
"the 'Connect to server' option in the main menu after clicking on the "
"desktop for Ubuntu."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:158
msgid "The provenance browser"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:160
msgid ""
"While the ``verdi`` CLI provides full access to the data underlying the "
"provenance graph (and we will return to it in :numref:`inspecting_nodes`), a"
" more intuitive tool for browsing AiiDA graphs is the interactive provenance"
" browser available on `Materials Cloud <https://www.materialscloud.org>`__."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:165
msgid ""
"In order to use it, we first need to start the `AiiDA REST API <https"
"://aiida-core.readthedocs.io/en/latest/restapi/index.html>`_:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:177
msgid "Now you can connect the provenance browser to your local REST API:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:179
msgid "Open the |provenance_browser| on your laptop"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:180
msgid ""
"In the form, paste the (local) URL ``http://127.0.0.1:5000/api/v3`` of our "
"REST API"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:182
msgid "Click \"GO!\""
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:188
msgid ""
"Once the provenance browser javascript application has been loaded by your "
"browser, it is communicating directly with the REST API and your data never "
"leaves your computer."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:191
msgid ""
"In order for this to work on your laptop, while the REST API is running on "
"the virtual machine, we've enabled SSH tunneling for port ``5000`` in "
":ref:`connect`."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:193
msgid ""
"Start by clicking on the Details of a ``CalcJobNode`` and use the graph "
"explorer to complete the exercise below. If you ever get lost, just go to "
"the \"Details\" tab, enter ``ce81c420-7751-48f6-af8e-eb7c6a30cec3`` and "
"click on the \"GO\" button."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:196
msgid "Exercise"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:198
msgid "Use the provenance browser in order to figure out:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:200
msgid "When was the calculation run and who run it?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:201
msgid ""
"Was it a serial or a parallel calculation? How many MPI processes were used?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:202
msgid "What inputs did the calculation take?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:203
msgid "What code was used and what was the name of the executable?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:204
msgid "How many calculations were performed using this code?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:210
msgid "Inspecting the nodes of a graph"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:214
msgid "Processes"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:216
msgid ""
"Anything that 'runs' in AiiDA, be it calculations or workflows, is "
"considered a ``Process``. To get a list of currently running processes, use:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:225
msgid ""
"The first time you run this command, it might take a few seconds. Subsequent"
" calls will be faster."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:228
msgid "which should be empty:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:239
msgid ""
"Let's see whether there are any *finished* processes in the database by "
"passing the ``-S/--process-state`` flag:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:245
msgid ""
"This command will list all the processes that have a process state "
"``Finished`` and should look something like:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:262
msgid "Processes can be in any of the following states:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:264
msgid "``Created``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:265
msgid "``Waiting``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:266
msgid "``Running``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:267
msgid "``Finished``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:268
msgid "``Excepted``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:269
msgid "``Killed``"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:271
msgid ""
"The first three states are 'active' states, meaning the process is not done "
"yet, and the last three are 'terminal' states. Once a process is in a "
"terminal state, it will never become active again. The `official "
"documentation <https://aiida-"
"core.readthedocs.io/en/latest/concepts/processes.html#process-state>`_ "
"contains more details on process states."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:275
msgid "In order to list processes of *all* states, use the ``-a/--all`` flag:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:281
msgid ""
"This command will list all the processes that have *ever* been launched. As "
"your database will grow, so will the output of this command. To limit the "
"number of results, you can use the ``-p/--past-days <NUM>`` option, that "
"will only show processes that were created ``NUM`` days ago. For example, "
"this lists all processes launched since yesterday:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:292
msgid ""
"Each row of the output identifies a process with some basic information "
"about its status. For a more detailed list of properties, you can use "
"``verdi process show``, but to address any specific process, you need an "
"identifier for it."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:295
msgid ""
"Let's revisit the process with the UUID ``ce81c420-7751-48f6-af8e-"
"eb7c6a30cec3``, this time using the CLI:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:301
msgid "Producing the output:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:339
msgid ""
"You can use the PKs shown for the inputs and outputs to get more information"
" about those nodes."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:343
msgid ""
"Since the inputs and outputs are ``Data`` nodes, not ``Process`` nodes, use "
"``verdi node show`` instead."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:347
msgid "Dict and CalcJobNode"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:349
msgid ""
"Let's investigate some of the nodes appearing in the graph. From the inputs "
"of the process, let's choose the node of type ``Dict`` with input link name "
"``parameters`` and type in the terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:356
msgid "where ``<IDENTIFIER>`` is the PK of the node."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:358
msgid ""
"A ``Dict`` contains a dictionary (i.e. key–value pairs), stored in the "
"database in a format ready to be queried. We will learn how to run queries "
"later on in this tutorial. The command above will print the content "
"dictionary, containing the parameters used to define the input file for the "
"calculation. You can compare the dictionary with the content of the raw "
"input file to Quantum ESPRESSO (that was generated by AiiDA) via the "
"command:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:367
msgid ""
"where you provide the identifier of the calculation node. Check the "
"consistency of the parameters written in the input file and those stored in "
"the ``Dict`` node. Even if you don't know the meaning of the input flags of "
"a Quantum ESPRESSO calculation, you should be able to see how the input "
"dictionary has been converted to Fortran namelists."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:371
msgid ""
"The previous command just printed the content of the 'default' input file "
"``aiida.in``. To see a list of all the files used to run a calculation "
"(input file, submission script, etc.) instead type:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:378
msgid ""
"Adding a ``--color`` flag allows you to easily distinguish files from "
"folders by a different coloring. Once you know the name of the file you want"
" to visualize, you can call the ``verdi calcjob inputcat [PATH]`` command "
"specifying the path. For instance, to see the submission script, you can do:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:387
msgid "StructureData"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:389
msgid ""
"Now let us focus on ``StructureData`` objects, which represent a crystal "
"structure. We can consider for instance the input structure to the "
"calculation we were considering before (it should have the UUID "
"``3a4b1270``). Such objects can be inspected interactively by means of an "
"atomic viewer such as the one provided by ``ase``. AiiDA however supports "
"several other viewers such as ``xcrysden``, ``jmol``, and ``vmd``. Type in "
"the terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:399
msgid ""
"to show the selected structure, although it will take a few seconds to "
"appear You should be able to rotate the view with the right mouse button."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:404
msgid ""
"If you receive some errors, make sure you started your SSH connection with "
"the ``-X`` or ``-Y`` flag."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:406
msgid ""
"Alternatively, especially if showing them interactively is too slow over "
"SSH, you can export the content of a structure node in various popular "
"formats such as ``xyz`` or ``xsf``. This is achieved by typing in the "
"terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:414
msgid ""
"You can open the generated ``xsf`` file and observe the cell and the "
"coordinates. Then, you can then copy ``<IDENTIFIER>.xsf`` from the Amazon "
"machine to your local one and then visualize it, e.g. with ``xcrysden`` (if "
"you have it installed):"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:422
msgid "Codes and computers"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:424
msgid ""
"Let us focus now on the nodes of type ``Code``. A code represents (in the "
"database) the actual executable used to run the calculation. Find the "
"identifier of such a node in the graph and type:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:432
msgid ""
"The command prints information on the plugin used to interface the code to "
"AiiDA, the remote machine on which the code is executed, the path of its "
"executable, etc. To show a list of all available codes type:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:439
msgid ""
"If you want to show all codes, including hidden ones and those created by "
"other users, use ``verdi code list -a -A``. Now, among the entries of the "
"output you should also find the code just shown."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:442
msgid ""
"Similarly, the list of computers on which AiiDA can submit calculations is "
"accessible by means of the command:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:448
msgid ""
"The ``-a`` flag shows all computers, also the one imported in your database "
"but that you did not configure, i.e. to which you don't have access. Details"
" about each computer can be obtained by the command:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:455
msgid ""
"Now you have the tools to answer the question: what is the scheduler "
"installed on the computer where the calculations of the graph have run?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:458
msgid "Calculation results"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:460
msgid ""
"The results of a calculation can be accessed directly from the calculation "
"node. Type in the terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:467
msgid ""
"which will print the output dictionary of the 'scalar' results parsed by "
"AiiDA at the end of the calculation. Note that this is actually a shortcut "
"for:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:474
msgid ""
"where ``IDENTIFIER`` refers to the ``Dict`` node attached as an output of "
"the calculation node, with link name ``output_parameters``. By looking at "
"the output of the command, what is the Fermi energy of the calculation with "
"UUID ``ce81c420``?"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:477
msgid ""
"Similarly to what you did for the calculation inputs, you can access the "
"output files via the commands:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:483
msgid "and"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:489
msgid ""
"Use the latter to verify that the Fermi energy that you have found in the "
"last step has been extracted correctly from the output file"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:493
msgid ""
"Hint: filter the lines containing the string 'Fermi', e.g. using ``grep``, "
"to isolate the relevant lines"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:495
msgid ""
"The results of calculations are stored in two ways: ``Dict`` objects are "
"stored in the database, which makes querying them very convenient, whereas "
"``ArrayData`` objects are stored on the disk. Once more, use the command "
"``verdi data array show <IDENTIFIER>`` to determine the Fermi energy "
"obtained from calculation with the UUID ``ce81c420``. This time you will "
"need to use the identifier of the output ``ArrayData`` of the calculation, "
"with link name ``output_trajectory_array``. As you might have realized the "
"difference now is that the whole series of values of the Fermi energy "
"calculated after each relax/vc-relax step are stored. The choice of what to "
"store in ``Dict`` and ``ArrayData`` nodes is made by the parser of ``pw.x`` "
"implemented in the ``aiida-quantumespresso`` plugin."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:502
msgid "(Optional section) Comments"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:504
msgid ""
"AiiDA offers the possibility to attach comments to a any node, in order to "
"be able to remember more easily its details. Node with UUID prefix "
"``ce81c420`` should have no comments, but you can add a very instructive one"
" by typing in the terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:511
msgid ""
"Now, if you ask for a list of all comments associated to that calculation by"
" typing:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:517
msgid ""
"the comment that you just added will appear together with some useful "
"information such as its creator and creation date. We let you play with the "
"other options of ``verdi comment`` command to learn how to update or remove "
"comments."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:521
msgid "AiiDA groups of calculations"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:523
msgid ""
"In AiiDA, calculations (and more generally nodes) can be organized in "
"groups, which are particularly useful to assign a set of calculations or "
"data to a common project. This allows you to have quick access to a whole "
"set of calculations with no need for tedious browsing of the database or "
"writing complex scripts for retrieving the desired nodes. Type in the "
"terminal:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:531
msgid ""
"to show a list of **all** groups that exist in the database. Choose the PK "
"of the group named ``tutorial_pbesol`` and look at the calculations that it "
"contains by typing:"
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:538
msgid ""
"In this case, we have used the name of the group to organize calculations "
"according to the pseudopotential that has been used to perform them. Among "
"the rows printed by the last command you will be able to find the "
"calculation we have been inspecting until now."
msgstr ""

#: ../docs/pages/2019_MARVEL_Psik_MaX/sections/verdi_cmdline.rst:541
msgid ""
"If, instead, you want to know all the groups to which a specific node "
"belongs, you can run:"
msgstr ""
