# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA Tutorials package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 18:01+0000\n"
"PO-Revision-Date: 2019-07-15 18:02+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:1
msgid "The AiiDA python interface"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:4
msgid ""
"In this section we will use an interactive python environment with all the "
"basic AiiDA classes already loaded. There are two variants of this:"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:7
msgid ""
"The first is a customized ipython shell where all the AiiDA classes, methods"
" and functions are accessible. Type in the terminal"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:14
msgid ""
"For everyday AiiDA-based operations, i.e. creating, querying and using AiiDA"
" objects, the <span>verdi shell</span> is probably the best tool. You would "
"usually use two terminals, one for the <span>verdi shell</span> and one to "
"execute bash commands."
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:19
msgid ""
"The second option is based on jupyter notebooks and is great for tutorial "
"purposes. Double click on the Jupyter Apps icon on the Desktop to start a "
"jupyter notebook server. After a few seconds, the browser will open and "
"display the home app. Click on File Browser and select New -> Python 2 (top "
"right corner). You are now inside a jupyter notebook, made of cells where "
"you can type portions of python code. The code will not be executed until "
"you press Shift+Enter from within a cell. Type in the first cell"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:28
msgid ""
"and execute it. This will set exactly the same environment as the "
"<span>verdi shell</span>. The notebook will be automatically saved upon any "
"modification and when you think you are done, you can export your notebook "
"in many formats by going to File -> Download as. We suggest you to have a "
"look to the drop-down menus Insert and Cell where you will find the main "
"commands to manage the cells of your notebook. The <span>verdi shell</span> "
"and the <span>jupyter</span> notebook are completely equivalent. Use either "
"according to your personal convenience."
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:38
msgid ""
"Note: you will still need sometimes to type command-line instructions in "
"<span>bash</span> in the first terminal you opened today. To differentiate "
"these from the commands to be typed in the <span>verdi shell</span>, the "
"latter will be marked in this document by a vertical line on the left, like:"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:48
msgid ""
"while command-line instructions in <span>bash</span> to be typed on a "
"terminal will be encapsulated between horizontal lines:"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:55
msgid ""
"Alternatively, to avoid changing terminal, you can execute <span>bash</span>"
" commands within the <span>verdi shell</span> or the notebook adding an "
"exclamation mark before the command itself"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:63
msgid "Loading a node"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:66
msgid ""
"Most AiiDA objects are represented by nodes, identified in the database by "
"its pk number (an integer). You can access a node using the following "
"command in the shell:"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:74
msgid ""
"Load a node using one of the calculation pks visible in the graph you "
"displayed in the previous section of the tutorial. Then get the energy of "
"the calculation with the command"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:82
msgid "You can also type"
msgstr ""

#: ../docs/pages/2018_EPFL_molsim/tutorial/python-interface.md:88
msgid ""
"and then press <span>TAB</span> to see all the possible output results of "
"the calculation."
msgstr ""
