# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE (Theory and Simulation of Materials (THEOS) and National Centre for Computational Design and Discovery of Novel Materials (NCCR MARVEL)), Switzerland and ROBERT BOSCH LLC, USA. All rights reserved
# This file is distributed under the same license as the AiiDA Tutorials package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AiiDA Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 18:01+0000\n"
"PO-Revision-Date: 2019-07-15 18:03+0000\n"
"Language-Team: Chinese (China) (https://www.transifex.com/aiidateam/teams/98967/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:2
msgid "Verdi command line"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:4
msgid ""
"This part of the tutorial will help to familiarize you with the command-line"
" utility ``verdi``, one of the most common ways to interact with AiiDA. "
"``verdi`` with its subcommands enables a variety of operations such as "
"inspecting the status of ongoing or terminated calculations, showing the "
"details of calculations, computers, codes, or data structures, access the "
"input and the output of a calculation, etc. Similar to the ``bash`` shell, "
"verdi command support Tab completion. Try right now to type ``verdi``, "
"followed by a space, in a terminal and tap Tab twice to have a list of "
"subcommands. Whenever you need the explanation of a command type ``verdi "
"help`` or add ``-h`` flag if you are using any of the ``verdi`` subcommands."
" Finally, fields enclosed in angular brackets, such as ``<pk>``, are "
"placeholders to be replaced by the actual value of that field (an integer, a"
" string, etc...)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:19
msgid "The list of calculations"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:21
msgid "Let us try our first ``verdi`` commands. Type in the terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:27
msgid ""
"(Note: the first time you run this command, it might take a few seconds as "
"it is the first time you are accessing the database in the virtual machine. "
"Subsequent calls will be faster). This will print the list of ongoing "
"calculations, which should be empty. The first output line should look like"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:42
msgid ""
"In order to print a list with all calculations that finished correctly in "
"the AiiDA database, you can use the ``-s/--states`` flag as follows:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:49
msgid ""
"Another very typical option combination allows to get calculations in *any* "
"state (flag ``-a``) generated in the past ``NUM`` days (``-p <NUM>``): e.g.,"
" for calculation in the past 1 day: ``verdi calculation list -p1 -a``. Since"
" you have not yet run any calculations at the virtual machine that you "
"currently use and all the existing calculations were imported and belong to "
"a different user, you can type (flag ``-A`` shows the calculations of all "
"the users):"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:61
msgid ""
"Each row of the output identifies a calculation and shows some information "
"about it. For a more detailed list of properties, choose one row by noting "
"down its PK (primary key) number (first column of the output) and type in "
"the terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:70
msgid ""
"The output depends on the specific pk chosen and should inform you about the"
" input nodes (e.g. pseudopotentials, kpoints, initial structure, etc.), and "
"output nodes (e.g. output structure, output parameters, etc.)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:75
msgid ""
"**PKs/IDs vs. UUIDs**: Beside the (integer) PK, very convenient to reference"
" a calculation or data node in your database, every node has a UUID "
"(Universally Unique ID) to identify it, that is preserved even when you "
"share some nodes with coworkers—while the PK will most likely change. You "
"can see the UUID in the output of ``verdi calculation show`` or ``verdi node"
" show``. Moreover, if you have already a UUID and you want to get the "
"corresponding PK in your database, you can use ``verdi node show -u "
"<UUID>``, as we are going to do now."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:84
msgid ""
"Let us now consider the node with ``UUID = ce81c420-7751-48f6-af8e-"
"eb7c6a30cec3``, which identifies a relaxation of a BaTiO(\\_3) unit cell run"
" with Quantum Espresso ``pw.x``. You can check the information on this node "
"and get the PK with:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:125
msgid ""
"*Keep in mind that you can also use just a part (beginning) of the UUID, as "
"long as it is unique, to show the node information information.* For "
"example, to display the above information, you could also type ``verdi node "
"show -u ce81c420``. In what follows, we are going to mention only the "
"prefixes of the UUIDs since they are sufficient to identify the correct "
"node."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:133
msgid "A typical AiiDA graph"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:135
msgid ""
"AiiDA stores inputs required by a calculation as well as the its outputs in "
"the database. These objects are connected in a graph that looks like Fig. "
"[fig:graph]. We suggest that you have a look to the figure before going "
"ahead."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:143
msgid ""
"Graph with all inputs (data, circles; and code, diamond) to the Quantum "
"Espresso calculation (square) that you will create in Sec. [sec:qe] of this "
"tutorial."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:150
msgid ""
"Same as above, but also with the outputs that the daemon will create and "
"connect automatically. The RemoteData node is created during submission and "
"can be thought as a symbolic link to the remote folder in which the "
"calculation runs on the cluster. The other nodes are created when the "
"calculation has finished, after retrieval and parsing. The node with "
"linkname “retrieved” contains the raw output files stored in the AiiDA "
"repository; all other nodes are added by the parser. Additional nodes "
"(symbolized in gray) can be added by the parser (e.g., an output "
"StructureData if you performed a relaxation calculation, a TrajectoryData "
"for molecular dynamics, …)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:161
msgid ""
"You can create a similar graph for any calculation node by using the utility"
" ``verdi graph generate <pk>``. For example, before you obtained information"
" (in text form) for ``UUID = ce81c420``. To visualize similar information in"
" graph(ical) form, run (replacing ``<pk>`` with the PK of the node):"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:171
msgid ""
"This command will create the file ``<pk>.dot`` that can be rendered by means"
" of the utility ``dot``. If you now type"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:178
msgid ""
"you will create a pdf file ``<pk>.pdf``. You can open this file on the "
"Amazon machine by using ``evince`` or, if you feel that the ssh connection "
"is too slow, copy it via ``scp`` to your local machine. To do so, if you are"
" using Linux/Mac OS X, you can type in your *local* machine:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:188
msgid ""
"and then open the file. Alternatively, you can use graphical software to "
"achieve the same, for instance: WinSCP on Windows, Cyberduck on the Mac, or "
"the “Connect to server” option in the main menu after clicking on the "
"desktop for Ubuntu."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:193
msgid ""
"Spend some time to familiarize yourself with the graph structure. Choose the"
" root node (highlighted in blue) and trace back the parent calculation which"
" produced the structure used as an input. This is an example of a Quantum "
"ESPRESSO pw.x calculation, where the input structure was actually obtained "
"as the output of a previous calculation. We will now inspect the different "
"elements of this graph."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:201
msgid "Inspecting the nodes of a graph"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:204
msgid "ParameterData and Calculations"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:206
msgid ""
"Now, let us have a closer look at the some of the nodes appearing in the "
"graph. Choose the node of the type ``ParameterData`` with input link name "
"``parameters`` (to double check, it should have UUID ``d1bbe1ea``) and type "
"in the terminal:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:215
msgid ""
"A ``ParameterData`` contains a dictionary (i.e., key–value pairs), stored in"
" the database in a format ready to be queried (we will learn how to run "
"queries later on in this tutorial). The command above will print the content"
" dictionary, containing the parameters used to define the input file for the"
" calculation. You can compare the dictionary with the content of the raw "
"input file to Quantum ESPRESSO (that was generated by AiiDA) via the command"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:227
msgid ""
"where you substitute the pk of the calculation node. Check the consistency "
"of the parameters written in the input file and those stored in the "
"ParameterData node. Even if you don’t know the meaning of the input flags of"
" a Quantum ESPRESSO calculation, you should be able to see how the input "
"dictionary has been converted to Fortran namelists."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:233
msgid ""
"The previous command just printed the content of the “default” input file "
"``aiida.in``. To see a list of all the files used to run a calculation "
"(input file, submission script, etc.) instead type"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:241
msgid ""
"(Adding a ``--color`` flag allows you to easily distinguish files from "
"folders by a different coloring)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:244
msgid ""
"Once you know the name of the file you want to visualize, you can call the "
"``verdi calculation inputcat`` command specifying the path. For instance, to"
" see the submission script, you can do:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:253
msgid "StructureData"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:255
msgid ""
"Now let us focus on StructureData objects, representing a crystal structure."
" We can consider for instance the input structure to the calculation we were"
" considering before (it should have UUID prefix ``3a4b1270``). Such objects "
"can be inspected interactively by means of an atomic viewer such as the one "
"provided by ``ase``. AiiDA however supports several other viewers such as "
"``xcrysden``, ``jmol``, and ``vmd``. Type in the terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:267
msgid ""
"to show the selected structure (it will take a few seconds to appear, and "
"you can rotate the view with the right mouse button—if you receive some "
"errors, make sure you started your SSH connection with the ``-X`` or ``-Y`` "
"flag)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:272
msgid ""
"Alternatively, especially if showing them interactively is too slow over "
"SSH, you can export the content of a structure node in various popular "
"formats such as ``xyz`` or ``xsf``. This is achieved by typing in the "
"terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:281
msgid ""
"You can open the generated ``xsf`` file and observe the cell and the "
"coordinates. Then, you can then copy ``<pk>.xsf`` from the Amazon machine to"
" your local one and then visualize it, e.g. with xcrysden (if you have it "
"installed):"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:291
msgid "Codes and computers"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:293
msgid ""
"Let us focus now on the nodes of type ``code``. A code represents (in the "
"database) the actual executable used to run the calculation. Find the pk of "
"such a node in the graph and type"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:301
msgid ""
"The command prints information on the plugin used to interface the code to "
"AiiDA, the remote machine on which the code is executed, the path of its "
"executable, etc. To show a list of all available codes type"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:309
msgid ""
"If you want to show all codes, including hidden ones and those created by "
"other users, use ``verdi code list -a -A``. Now, among the entries of the "
"output you should also find the code just shown."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:313
msgid ""
"Similarly, the list of computers on which AiiDA can submit calculations is "
"accessible by means of the command"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:320
msgid ""
"(``-a`` shows all computers, also the one imported in your database but that"
" you did not configure, i.e., to which you don’t have access). Details about"
" each computer can be obtained by the command"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:328
msgid "Now you have the tools to answer the question:"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:330
msgid ""
"What is the scheduler installed on the computer where the calculations of "
"the graph have run?"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:334
msgid "Calculation results"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:336
msgid ""
"The results of a calculation can be accessed directly from the calculation "
"node. Type in the terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:343
msgid ""
"which will print the output dictionary of the “scalar” results parsed by "
"AiiDA at the end of the calculation. Note that this is actually a shortcut "
"for"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:351
msgid ""
"where ``pk2`` refers to the ParameterData node attached as an output of the "
"calculation node, with link name ``output_parameters``."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:354
msgid ""
"By looking at the output of the command, what is the Fermi energy of the "
"calculation with UUID prefix ``ce81c420``?"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:357
msgid ""
"Similarly to what you did for the calculation inputs, you can access the "
"output files via the commands"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:364
msgid "and"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:370
msgid ""
"Use the latter to verify that the Fermi energy that you have found in the "
"last step has been extracted correctly from the output file (Hint: filter "
"the lines containing the string “Fermi”, e.g. using ``grep``, to isolate the"
" relevant lines)."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:375
msgid ""
"The results of calculations are stored in two ways: ``ParameterData`` "
"objects are stored in the database, which makes querying them very "
"convenient, whereas ``ArrayData`` objects are stored on the disk. Once more,"
" use the command ``verdi data array show <pk>`` to know the Fermi energy "
"obtained from calculation with UUID prefix ``ce81c420`` (you need to use, "
"this time, the PK of the output ArrayData of the calculation, with link name"
" ``output_trajectory_array``). As you might have realized the difference now"
" is that the whole series of values of the Fermi energy calculated after "
"each relax/vc-relax step are stored. (The choice of what to store in "
"``ParameterData`` and ``ArrayData`` nodes is made by the parser of ``pw.x`` "
"implemented in the ``aiida-quantumespresso`` plugin.)"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:389
msgid "(Optional section) Comments"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:391
msgid ""
"AiiDA offers the possibility to attach comments to a calculation node, in "
"order to be able to remember more easily its details. Node with UUID prefix "
"ce81c420 has no comment already defined, but you can add a very instructive "
"one by typing in the terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:400
msgid ""
"Now, if you ask for a list of all comments associated to that calculation by"
" typing"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:407
msgid ""
"the comment that you just added will appear together with some useful "
"information such as its creator and creation date. We let you play with the "
"other options of ``verdi comment`` command to learn how to update or remove "
"comments."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:413
msgid "AiiDA groups of calculations"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:415
msgid ""
"In AiiDA, calculations (and more generally nodes) can be organized in "
"groups, which are particularly useful to assign a set of calculations or "
"data to a common project. This allows you to have quick access to a whole "
"set of calculations with no need for tedious browsing of the database or "
"writing complex scripts for retrieving the desired nodes. Type in the "
"terminal"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:426
msgid ""
"to show a list of the groups that already exist in the database. Choose the "
"PK of the group named ``tutorial_pbesol`` and look at the calculations that "
"it contains by typing"
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:434
msgid ""
"In this case, we have used the name of the group to organize calculations "
"according to the pseudopotential that has been used to perform them. Among "
"the rows printed by the last command you will be able to find the "
"calculation we have been inspecting until now."
msgstr ""

#: ../docs/pages/2018_PRACE_MaX/sections/verdi_cmdline.rst:439
msgid ""
"If, instead, you want to know all the groups to which a specific node "
"belomngs, you can run"
msgstr ""
